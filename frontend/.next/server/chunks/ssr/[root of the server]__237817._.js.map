{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/mrowlise/kashikuroni_tech/base_project_tamplate/frontend/src/services/backend-api/baseApi.ts"],"sourcesContent":["import axios, { AxiosError, AxiosInstance, AxiosRequestConfig } from \"axios\";\n\nexport class BaseApi {\n  protected api: AxiosInstance;\n\n  constructor() {\n    const baseURL =\n      process.env.NEXT_PUBLIC_DEVELOPMENT_HOST || \"http://localhost:8000\";\n    this.api = axios.create({\n      baseURL,\n      withCredentials: true,\n    });\n  }\n\n  /**\n   * Объединение заголовков.\n   * @param headers Дополнительные заголовки.\n   * @returns Итоговые заголовки.\n   */\n  private mergeHeaders(\n    headers?: Record<string, string>,\n  ): Record<string, string> {\n    const defaultHeaders: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    const token = localStorage.getItem(\"userToken\");\n    if (token) {\n      defaultHeaders.Authorization = `Token ${token}`;\n    }\n    // Сначала в конечный headers попадет все что находиться\n    // в defaultHeaders, потом все что в headers, причем одинаковые ключи\n    // будут перезаписаны значением из headers. Такие как Content-Type например\n    return { ...defaultHeaders, ...headers };\n  }\n\n  /**\n   * Метод для выполнения POST-запроса.\n   * @param url URL для запроса.\n   * @param data Тело запроса.\n   * @param headers Дополнительные заголовки.\n   */\n  protected async post<D, R>(\n    url: string,\n    data?: D,\n    headers?: Record<string, string>,\n  ): Promise<R> {\n    const config: AxiosRequestConfig = {\n      headers: this.mergeHeaders(headers),\n    };\n    const response = await this.api.post<R>(url, data, config);\n    return response.data;\n  }\n\n  /**\n   * Метод для выполнения GET-запроса.\n   * @param url URL для запроса.\n   * @param headers Дополнительные заголовки.\n   */\n  protected async get<R>(\n    url: string,\n    headers?: Record<string, string>,\n  ): Promise<R> {\n    const config: AxiosRequestConfig = {\n      headers: this.mergeHeaders(headers),\n    };\n    const response = await this.api.get<R>(url, config);\n    return response.data;\n  }\n  protected handleError = (error: AxiosError) => {\n    const simpleError = {\n      status: error.status,\n      message: error.message,\n      data: error.response?.data,\n    };\n    return simpleError;\n  };\n\n/**\n * Executes a PUT request to the specified URL with the given data.\n *\n * @template D The type of the request payload.\n * @template R The expected type of the response data.\n * @param {string} url - The URL to send the PUT request to.\n * @param {D} [data] - The payload to be sent in the request body.\n * @param {Record<string, string>} [headers] - Optional additional headers to include in the request.\n * @returns {Promise<R>} A promise resolving to the response data of type R.\n * \n * @throws {Error} Throws an error if the request fails. The error will be formatted by `handleError`.\n */\n  protected async put<D, R>(\n    url: string,\n    data?: D,\n    headers?: Record<string, string>,\n  ): Promise<R> {\n    const config: AxiosRequestConfig = {\n      headers: this.mergeHeaders(headers),\n    };\n    try {\n      const response = await this.api.put<R>(url, data, config);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error as AxiosError);\n    }\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM;IACD,IAAmB;IAE7B,aAAc;QACZ,MAAM,UACJ,6DAA4C;QAC9C,IAAI,CAAC,GAAG,GAAG,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;YACtB;YACA,iBAAiB;QACnB;IACF;IAEA;;;;GAIC,GACD,AAAQ,aACN,OAAgC,EACR;QACxB,MAAM,iBAAyC;YAC7C,gBAAgB;QAClB;QAEA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,eAAe,aAAa,GAAG,CAAC,MAAM,EAAE,OAAO;QACjD;QACA,wDAAwD;QACxD,qEAAqE;QACrE,2EAA2E;QAC3E,OAAO;YAAE,GAAG,cAAc;YAAE,GAAG,OAAO;QAAC;IACzC;IAEA;;;;;GAKC,GACD,MAAgB,KACd,GAAW,EACX,IAAQ,EACR,OAAgC,EACpB;QACZ,MAAM,SAA6B;YACjC,SAAS,IAAI,CAAC,YAAY,CAAC;QAC7B;QACA,MAAM,WAAW,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAI,KAAK,MAAM;QACnD,OAAO,SAAS,IAAI;IACtB;IAEA;;;;GAIC,GACD,MAAgB,IACd,GAAW,EACX,OAAgC,EACpB;QACZ,MAAM,SAA6B;YACjC,SAAS,IAAI,CAAC,YAAY,CAAC;QAC7B;QACA,MAAM,WAAW,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAI,KAAK;QAC5C,OAAO,SAAS,IAAI;IACtB;IACU,cAAc,CAAC;QACvB,MAAM,cAAc;YAClB,QAAQ,MAAM,MAAM;YACpB,SAAS,MAAM,OAAO;YACtB,MAAM,MAAM,QAAQ,EAAE;QACxB;QACA,OAAO;IACT,EAAE;IAEJ;;;;;;;;;;;CAWC,GACC,MAAgB,IACd,GAAW,EACX,IAAQ,EACR,OAAgC,EACpB;QACZ,MAAM,SAA6B;YACjC,SAAS,IAAI,CAAC,YAAY,CAAC;QAC7B;QACA,IAAI;YACF,MAAM,WAAW,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAI,KAAK,MAAM;YAClD,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,MAAM,IAAI,CAAC,WAAW,CAAC;QACzB;IACF;AACF"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/mrowlise/kashikuroni_tech/base_project_tamplate/frontend/src/services/backend-api/authApi.ts"],"sourcesContent":["import axios from \"axios\";\nimport { BaseApi } from \"./baseApi\";\nimport * as types from \"./authApi.types\";\n\nclass AuthApi extends BaseApi {\n  /**\n   * Функция авторизации пользователя в системе\n   */\n  public async register(data: types.SignupData): Promise<types.ApiResponse> {\n    try {\n      const response = await this.post(`api/auth/v1/register/`, data);\n      return response;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        if (error.response && error.response.data) {\n          const errorMessages = error.response.data;\n          if (errorMessages.email || errorMessages.username) {\n            throw new Error(\n              \"Указанные данные уже используются. Пожалуйста, проверьте введенные данные.\",\n            );\n          } else {\n            throw new Error(\n              \"Произошла ошибка. Пожалуйста, попробуйте ещё раз.\",\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Функция регистрации пользователя в системе.\n   */\n  public async login(data: types.SigninData): Promise<any> {\n    const response = await this.post(\"/api/auth/v1/login/\", data);\n    return response;\n  }\n\n  /**\n   * Функция выхода из системы с удалением токена с базы\n   */\n  public async logout(): Promise<any> {\n    const response = await this.post(\"/api/auth/token/logout/\", {});\n    return response;\n  }\n\n  /**\n   * Fetches user data from the backend API.\n   *\n   * @returns {Promise<any>} The user data returned from the backend.\n   *\n   * @throws Will throw an error if the API request fails.\n   *\n   * Note: This function does not handle errors internally.\n   * Ensure that you wrap the call to this function in a `try-catch` block\n   * or use a `.catch()` method to handle potential errors.\n   *\n   * Example usage:\n   * ```ts\n   * try {\n   *   const user = await userService.getUser();\n   *   console.log(user);\n   * } catch (error) {\n   *   console.error(\"Failed to fetch user data:\", error);\n   * }\n   * ```\n   */\n  public async getUser(): Promise<any> {\n    const response = await this.get(\"/api/auth/v1/users/\");\n    return response;\n  }\n\n  /**\n   * Refreshes the access token using the refresh token stored in cookies.\n   *\n   * This function sends a POST request to the backend API endpoint\n   * to refresh the tokens. It expects the backend to manage tokens via HttpOnly cookies.\n   *\n   * @returns {Promise<void>} Resolves when the token is successfully refreshed.\n   *\n   * @throws Will throw an error if the refresh token is missing or the refresh process fails.\n   *\n   * Note: This function assumes that HttpOnly cookies are automatically handled\n   * by the browser or client during the request.\n   *\n   * Example usage:\n   * ```ts\n   * try {\n   *   await authService.refreshToken();\n   *   console.log(\"Token refreshed successfully.\");\n   * } catch (error) {\n   *   console.error(\"Failed to refresh token:\", error);\n   * }\n   * ```\n   */\n  public async refreshToken(): Promise<types.RefreshTokenProps> {\n    const response = await this.post<{}, types.RefreshTokenProps>(\n      \"/api/auth/v1/refresh/\",\n    );\n    if (!response || typeof response.success !== \"boolean\") {\n      throw new Error(\"Invalid response format.\");\n    }\n    if (!response.success) {\n      throw new Error(response.message || \"Failed to refresh token.\");\n    }\n    return response;\n  }\n\n  public async updateProfile(data: FormData): Promise<any> {\n    const response = await this.put(\"/api/auth/v1/users/\", data, {\n      \"Content-Type\": \"multipart/form-data\",\n    });\n    return response;\n  }\n\n  /**\n   * Смена пароля.\n   */\n  public async changePassword(data: types.ChangePassword): Promise<any> {\n    const response = await this.post(\"/api/users/set_password/\", data);\n    return response;\n  }\n}\n\nexport default new AuthApi();\n"],"names":[],"mappings":";;;AACA;AADA;;;AAIA,MAAM,gBAAgB,4IAAA,CAAA,UAAO;IAC3B;;GAEC,GACD,MAAa,SAAS,IAAsB,EAA8B;QACxE,IAAI;YACF,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,EAAE;YAC1D,OAAO;QACT,EAAE,OAAO,OAAO;YACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;gBAC7B,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,IAAI,EAAE;oBACzC,MAAM,gBAAgB,MAAM,QAAQ,CAAC,IAAI;oBACzC,IAAI,cAAc,KAAK,IAAI,cAAc,QAAQ,EAAE;wBACjD,MAAM,IAAI,MACR;oBAEJ,OAAO;wBACL,MAAM,IAAI,MACR;oBAEJ;gBACF;YACF;QACF;IACF;IAEA;;GAEC,GACD,MAAa,MAAM,IAAsB,EAAgB;QACvD,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,uBAAuB;QACxD,OAAO;IACT;IAEA;;GAEC,GACD,MAAa,SAAuB;QAClC,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC;QAC7D,OAAO;IACT;IAEA;;;;;;;;;;;;;;;;;;;;GAoBC,GACD,MAAa,UAAwB;QACnC,MAAM,WAAW,MAAM,IAAI,CAAC,GAAG,CAAC;QAChC,OAAO;IACT;IAEA;;;;;;;;;;;;;;;;;;;;;;GAsBC,GACD,MAAa,eAAiD;QAC5D,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAC9B;QAEF,IAAI,CAAC,YAAY,OAAO,SAAS,OAAO,KAAK,WAAW;YACtD,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,SAAS,OAAO,EAAE;YACrB,MAAM,IAAI,MAAM,SAAS,OAAO,IAAI;QACtC;QACA,OAAO;IACT;IAEA,MAAa,cAAc,IAAc,EAAgB;QACvD,MAAM,WAAW,MAAM,IAAI,CAAC,GAAG,CAAC,uBAAuB,MAAM;YAC3D,gBAAgB;QAClB;QACA,OAAO;IACT;IAEA;;GAEC,GACD,MAAa,eAAe,IAA0B,EAAgB;QACpE,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B;QAC7D,OAAO;IACT;AACF;uCAEe,IAAI"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///Users/mrowlise/kashikuroni_tech/base_project_tamplate/frontend/src/components/ui/Input/Input.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BaseInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseInput() from the server but BaseInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/Input/Input.tsx <module evaluation>\",\n    \"BaseInput\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mEACA"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///Users/mrowlise/kashikuroni_tech/base_project_tamplate/frontend/src/components/ui/Input/Input.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BaseInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call BaseInput() from the server but BaseInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/Input/Input.tsx\",\n    \"BaseInput\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+CACA"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///Users/mrowlise/kashikuroni_tech/base_project_tamplate/frontend/src/components/Forms/Profile/ProfileForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport api from \"@/services/backend-api/authApi\";\nimport { BaseInput } from \"@/components/ui/Input/Input\";\n\nconst ProfileForm: React.FC = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n  });\n  const [avatar, setAvatar] = useState<File | null>(null);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const hanldleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setAvatar(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"username\", formData.username);\n    data.append(\"first_name\", formData.first_name);\n    data.append(\"last_name\", formData.last_name);\n    if (avatar) {\n      data.append(\"avatar\", avatar);\n    }\n\n    try {\n      const response = await api.updateProfile(data);\n      console.log(\"Profile updated:\", response);\n    } catch (error) {\n      console.error(\"Failed to update profile:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center max-w-70\">\n      <h2 className=\"text-2xl font-bold mb-5\">Вход</h2>\n      <form onSubmit={handleSubmit} className=\"flex flex-col gap-3\">\n        <BaseInput\n          label=\"Email\"\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={formData.username}\n          onChange={handleChange}\n        />\n        <BaseInput\n          label=\"Пароль\"\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          value={formData.first_name}\n          onChange={handleChange}\n        />\n        <BaseInput\n          label=\"Пароль\"\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          value={formData.last_name}\n          onChange={handleChange}\n        />\n        <div className=\"flex gap-4 mt-2 justify-between\">\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            type=\"button\"\n            onClick={handleSubmit}\n          >\n            Update Profile\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n};\n\nexport default ProfileForm;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,cAAwB;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,UAAU;QACV,YAAY;QACZ,WAAW;IACb;IACA,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAElD,MAAM,eAAe,CAAC;QACpB,YAAY;YACV,GAAG,QAAQ;YACX,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QACjC;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE;YACvC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;QAC7B;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM,OAAO,IAAI;QACjB,KAAK,MAAM,CAAC,YAAY,SAAS,QAAQ;QACzC,KAAK,MAAM,CAAC,cAAc,SAAS,UAAU;QAC7C,KAAK,MAAM,CAAC,aAAa,SAAS,SAAS;QAC3C,IAAI,QAAQ;YACV,KAAK,MAAM,CAAC,UAAU;QACxB;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,4IAAA,CAAA,UAAG,CAAC,aAAa,CAAC;YACzC,QAAQ,GAAG,CAAC,oBAAoB;QAClC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC,0IAAA,CAAA,YAAS;wBACR,OAAM;wBACN,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,OAAO,SAAS,QAAQ;wBACxB,UAAU;;;;;;kCAEZ,8OAAC,0IAAA,CAAA,YAAS;wBACR,OAAM;wBACN,IAAG;wBACH,MAAK;wBACL,MAAK;wBACL,OAAO,SAAS,UAAU;wBAC1B,UAAU;;;;;;kCAEZ,8OAAC,0IAAA,CAAA,YAAS;wBACR,OAAM;wBACN,IAAG;wBACH,MAAK;wBACL,MAAK;wBACL,OAAO,SAAS,SAAS;wBACzB,UAAU;;;;;;kCAEZ,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,WAAU;4BACV,MAAK;4BACL,SAAS;sCACV;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///Users/mrowlise/kashikuroni_tech/base_project_tamplate/frontend/src/app/auth/profile/update/page.tsx"],"sourcesContent":["import React from \"react\";\nimport ProfileForm from \"@/components/Forms/Profile/ProfileForm\";\n\nconst UpdateProfilePage: React.FC = () => {\n  return (\n    <>\n      <ProfileForm />\n    </>\n  );\n};\n\nexport default UpdateProfilePage;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,oBAA8B;IAClC,qBACE;kBACE,cAAA,8OAAC,qJAAA,CAAA,UAAW;;;;;;AAGlB;uCAEe"}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}